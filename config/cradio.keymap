/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 800  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SPACE MINUS>; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <22 21>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <23 22>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <23 21>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <0 1 2 3>;
            layers = <0 4>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <13 12 16 17>;
            layers = <0>;
        };

        escape_left {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1 2 1>;
        };

        scroll_up {
            bindings = <&msc SCRL_UP>;
            key-positions = <6 7 8>;
        };

        scroll_down {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <26 27 28>;
            layers = <0 5>;
        };

        mouse_layer {
            bindings = <&tog 5>;
            key-positions = <12 13 11 10>;
            layers = <0 5>;
        };
    };

    behaviors {
        tog_off: toggle_layer_off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer off";
            toggle-mode = "off";
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <130>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <155>;
            require-prior-idle-ms = <130>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            hold-trigger-on-release;
        };

        rthumb: rthumb {
            compatible = "zmk,behavior-hold-tap";
            label = "RTHUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <130>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 25 33 24 0 1 2 3 4 10>;
        };

        lthumb: lthumb {
            compatible = "zmk,behavior-hold-tap";
            label = "LTHUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
        };

        hold_priority: hold_priority {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PRIORITY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q         &kp W        &kp E        &kp R              &kp T                       &kp Y                            &kp U                &kp I        &kp O            &kp P
&hml LCTRL A  &hml LALT S  &hml LGUI D  &hml LEFT_SHIFT F  &kp G                       &kp H                            &hmr LEFT_SHIFT J    &hmr LGUI K  &hmr LEFT_ALT L  &hmr LCTRL SEMICOLON
&kp Z         &kp X        &kp C        &kp V              &kp B                       &kp N                            &kp M                &kp COMMA    &kp DOT          &kp SLASH
                                        &lthumb 1 SPACE    &hold_priority LCTRL TAB    &hold_priority LEFT_SHIFT ENTER  &rthumb 2 BACKSPACE
            >;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN           &kp HASH              &kp DOLLAR                    &kp PERCENT    &kp CARET      &kp AMPERSAND                  &kp ASTERISK           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&hml LCTRL PIPE  &hml LALT UNDERSCORE  &hml LGUI LEFT_BRACE  &hml LEFT_SHIFT LEFT_BRACKET  &kp SLASH      &kp BACKSLASH  &hmr LEFT_SHIFT RIGHT_BRACKET  &hmr LGUI RIGHT_BRACE  &hmr LALT MINUS       &hmr LCTRL COLON
&kp TILDE        &kp EQUAL             &kp GRAVE             &kp SQT                       &kp MINUS      &kp PLUS       &kp DOUBLE_QUOTES              &kp LESS_THAN          &kp GREATER_THAN      &kp QUESTION
                                                             &trans                        &mo 3          &trans         &trans
            >;
        };

        nav_number {
            bindings = <
&kp NUMBER_1            &kp N2  &kp N3  &kp N4     &kp N5      &kp N6          &kp N7                      &kp N8              &kp N9                 &kp N0
&hml LCTRL PRINTSCREEN  &trans  &trans  &trans     &trans      &kp LEFT_ARROW  &hmr LEFT_SHIFT DOWN_ARROW  &hmr LGUI UP_ARROW  &hmr LALT RIGHT_ARROW  &hmr LCTRL C_VOLUME_UP
&trans                  &trans  &trans  &kp PG_UP  &kp HOME    &kp END         &kp PG_DN                   &kp COMMA           &kp DOT                &kp C_VOLUME_DOWN
                                        &trans     &trans      &trans          &trans
            >;
        };

        settings_3 {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6          &kp F7  &kp F8  &kp F9  &kp F10
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR_ALL  &trans  &trans  &trans  &bt BT_CLR
&sys_reset    &trans        &trans        &ext_power EP_OFF        &bootloader       &bootloader     &trans  &trans  &trans  &sys_reset
                                          &trans        &studio_unlock    &to 0           &trans
            >;
        };

        one_hand_numpad {
            bindings = <
&kp STAR   &kp N7  &kp N8  &kp N9     &kp MINUS    &trans  &trans  &trans  &trans  &trans
&kp COMMA  &kp N4  &kp N5  &kp N6     &kp PLUS     &trans  &trans  &trans  &trans  &trans
&kp DOT    &kp N1  &kp N2  &kp N3     &kp FSLH     &trans  &trans  &trans  &trans  &trans
                           &kp SPACE  &kp N0       &trans  &trans
            >;
        };

        mouse {
            bindings = <
&none           &mkp MB4  &none           &mkp MB5  &none              &none           &msc SCRL_UP    &none         &none            &none
&msc SCRL_LEFT  &none     &msc SCRL_DOWN  &none     &msc SCRL_RIGHT    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MCLK
&none           &none     &none           &none     &none              &none           &msc SCRL_DOWN  &none         &none            &none
                                          &none     &tog_off 5         &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
