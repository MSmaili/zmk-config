/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SPACE MINUS>; };

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
    };

    combos {
        compatible = "zmk,combos";

        delete {
            bindings = <&kp DELETE>;
            key-positions = <12 13>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <22 23>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <23 24>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <22 24>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <16 17>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <0 1 2 3>;
            layers = <0 4>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <13 12 16 17>;
            layers = <0>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <21 22>;
            layers = <0>;
        };

        escape_left {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1 2 1>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <130>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <155>;
            require-prior-idle-ms = <130>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
            hold-trigger-on-release;
        };

        rthumb: rthumb {
            compatible = "zmk,behavior-hold-tap";
            label = "RTHUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <130>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 25 33 24 0 1 2 3 4 10>;
        };

        lthumb: lthumb {
            compatible = "zmk,behavior-hold-tap";
            label = "LTHUMB";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
        };

        hold_priority: hold_priority {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PRIORITY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R      &kp T            &kp Y      &kp U          &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F      &kp G            &kp H      &kp J          &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V      &kp B            &kp N      &kp M          &kp COMMA  &kp DOT  &kp SLASH
                     &kp SPACE  &mt LCTRL TAB    &kp ENTER  &kp BACKSPACE
            >;
        };

        symbol {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans           &trans       &trans     &trans      &trans         &trans     &trans             &trans         &kp COLON             &kp DOUBLE_QUOTES
&trans           &kp TILDE    &kp EQUAL  &kp SQT     &kp MINUS      &kp PLUS   &kp DOUBLE_QUOTES  &kp LESS_THAN  &kp GREATER_THAN      &kp QUESTION
                                         &trans      &trans         &trans     &trans
            >;
        };

        nav_number {
            bindings = <
&kp NUMBER_1  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                              &trans  &trans    &trans  &trans
            >;
        };

        settings_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans          &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans          &trans  &trans  &trans  &trans
                        &trans  &trans    &trans          &trans
            >;
        };
    };
};
