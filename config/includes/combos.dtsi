/* KEY POSITIONS (using keypos_def helpers)
╭─────────────────────┬─────────────────────╮
│ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
│ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
│ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
        ╰─────────────┴─────────────╯       */

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP, ...) \
  combo_##NAME { \
      timeout-ms = <TERM>; \
      bindings = <BINDINGS>; \
      key-positions = <KEYPOS>; \
      layers = <LAYERS>; \
      require-prior-idle-ms = <QUICKTAP>; \
      __VA_ARGS__ \
  };

/{
  combos {
    compatible = "zmk,combos";

    COMBO(delete,            &kp DELETE,         LM2 LM1,            BASE,       40, 100)
    COMBO(copy,              &kp LG(C),          LB3 LB2,            BASE,       50, 120)
    COMBO(paste,             &kp LG(V),          LB2 LB1,            BASE,       50, 120)
    COMBO(scroll_up,         &msc SCRL_UP,       RT1 RT2 RT3,        BASE MSE,   50, 180, slow-release;)
    COMBO(escape,            &kp ESC,            RM1 RM2,            BASE,       40, 0)
    COMBO(caps_word,         &caps_word,         LM2 LM1 RM1 RM2,    BASE,       50, 0)
    COMBO(enter,             &kp ENTER,          LM4 LM3 LM2,        BASE,       40, 220, slow-release;)
    COMBO(cut,               &kp LG(X),          LB3 LB1,            BASE,       40, 120)
    COMBO(to_mse_layer,      &tog MSE,           RM2 RM3,            BASE,       40, 180, slow-release;)
    COMBO(scroll_down,       &msc SCRL_DOWN,     RB1 RB2 RB3,        BASE MSE,   40, 180, slow-release;)
    COMBO(escape_left,       &kp ESC,            LT4 LT3,            BASE,       40, 200, slow-release;)
    COMBO(softoff,           &soft_off,          LM0 RM0,            FNC,        1000, 200)
    COMBO(bt_clear_all,      &bt BT_CLR_ALL,     LB4 RB4,            FNC,        40, 200)
    COMBO(indbat,            &ind_bat,           LT2 RT2,            FNC,        100, 200)
    COMBO(indcon,            &ind_con,           LT1 RT1,            FNC,        100, 200)
  };
};
